docker 部署说明
系统环境：
    ubuntu 18.04
硬件环境：
    内存：16G
    显卡：RTX2060s（双）
    磁盘：3T
    raid备份

1.安装显卡驱动(硬件出厂时安装)

2.安装cuda 9.0
    前期准备：
        降低gcc版本到5（由于Ubuntu 18.04对应的gcc版本过高）
        sudo apt install gcc-5
        sudo apt install g++-5
        查看
        ls -l gcc*
        修改软连接
        sudo mv gcc gcc.bak #备份
        sudo ln -s gcc-5 gcc #重新链接gcc
        sudo mv g++ g++.bak #备份
        sudo ln -s g++-5 g++　#重新链接g++
    安装;
        CUDA 9.0 只能支持17.04和16.04的Ubuntu（18需要添加补丁）
        下载 cuda 9.0 -> linux -> x86_64 -> Ubuntu -> 16.04 -> runfile(local) # 主程序和四个补丁包均要下载
        sudo sh 下载目录/cuda_9.0.176_384.81_linux.run
        一路回车键（当问到是否安装显卡驱动时，输入no,因为已经安装完了，其他均yes）
        同样的方案安装四个补丁包
            $ sudo sh cuda_9.0.176.1_linux.run
            $ sudo sh cuda_9.0.176.2_linux.run
            $ sudo sh cuda_9.0.176.3_linux.run
            $ sudo sh cuda_9.0.176.4_linux.run
        安装完补丁，不报错，显示成功即可
        配置环境变量：
            vi ~/.bashrc （如果你无法在~目录下看到它，你可以使用【Ctrl+H】来强制显示隐藏文件）
            添加（注意自己的安装目录）
            export  PATH=/usr/local/cuda-9.0/bin:$PATH
            export  LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64$LD_LIBRARY_PATH
    重启计算机
        sudo shutdown -r now

3.安装cuDNN 7 (下载对应版本)
    cuda 9.0 对应的cuDNN版本应该是cuDNN v7.5.1
    选择cuDNN Library for Linux
    解压下载好的压缩包
    将解压出来是一个cuda文件夹，进去有两个文件夹，一个include和一个lib64。进入刚刚解压得到的cuda文件夹，并在命令行中执行如下命令：
    sudo cp ./include/cudnn.h /usr/local/cuda/include
    sudo cp ./include/libcudnn* /usr/local/cuda/lib64
    赋权
    sudo chmod  a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*


